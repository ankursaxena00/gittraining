  public async Task<ActiveMapperData> getActiveMapperData(string tagId, string Vrn_no)
        {
            ActiveMapperData activeMapperData = new ActiveMapperData();
            try
            {
                ClsCommonVaraibles.IS_ACTIVE_MAPPER_REQUEST_INITIATED = true;
                string baseUrl = ClsCommonVaraibles.ACTIVE_MAPPER_BASE_URL;
                string endpoint = "/api/ReqRespTagDetails";
                string tagisvalid = "";
                var requestBody = new
                {
                    VehRegNo = Vrn_no,
                    TID = "",
                    TagId = tagId
                };
                // Serialize the request body to JSON
                string json = JsonConvert.SerializeObject(requestBody);
                var content = new StringContent(json, Encoding.UTF8, "application/json");

                ClsMaintainLog.WriteLogAPI("ActiveMapperData", "Request body:" + json, "");

                // Read timeout from app.config (in milliseconds)
                int timeoutMilliseconds = 5000; // default value
                string timeoutSetting = ConfigurationManager.AppSettings["APITimeout"];
                if (!string.IsNullOrEmpty(timeoutSetting))
                {
                    int.TryParse(timeoutSetting, out timeoutMilliseconds);
                }

                // Start the HTTP POST request
                Task<HttpResponseMessage> responseTask = httpClient.PostAsync($"{baseUrl}{endpoint}", content);

                // Create a delay task for the timeout
                Task delayTask = Task.Delay(timeoutMilliseconds);

                // Wait for either the responseTask or the delayTask to complete
                Task completedTask = await Task.WhenAny(responseTask, delayTask);

                if (completedTask == delayTask)
                {
                    // Timeout occurred
                    ClsMaintainLog.WriteLogAPI(
                        System.Reflection.MethodBase.GetCurrentMethod().Name.ToString(),
                        "Request Timeout",
                        $"API did not respond within {timeoutMilliseconds} ms."
                    );
                    ClsCommonVaraibles.IS_ACTIVE_MAPPER_REQUEST_INITIATED = false;
                    return null;
                }
                HttpResponseMessage response = await responseTask;

                ClsMaintainLog.WriteLogAPI("ActiveMapperData", "Response status:" + response.IsSuccessStatusCode, "");


                //// Serialize the request body object to JSON
                //string json = JsonConvert.SerializeObject(requestBody);

                //// Create the request content with JSON payload
                //var content = new StringContent(json, Encoding.UTF8, "application/json");
                //ClsMaintainLog.WriteLogAPI("ActiveMapperData", "Request body:" + json, "");
                //// Send the POST request
                //HttpResponseMessage response = await httpClient.PostAsync($"{baseUrl}{endpoint}", content);
                //ClsMaintainLog.WriteLogAPI("ActiveMapperData",  "Response status:" + response.IsSuccessStatusCode,"");
                // Check if the request was successful
                if (response.IsSuccessStatusCode)
                {
                    // Read the response content as a string
                    string responseBody = await response.Content.ReadAsStringAsync();
                    ClsMaintainLog.WriteLogAPI("ActiveMapperData", "Request body:" + responseBody, "");

                    var data = JsonConvert.DeserializeObject<Dictionary<string, object>>(responseBody);
                    var table1Data = JsonConvert.DeserializeObject<List<Table1Data>>(data["Table1"].ToString());
                    var table2DataList = JsonConvert.DeserializeObject<List<Table2Data>>(data["Table2"].ToString());
                    foreach (var table2Data in table2DataList)
                    {
                        var tempData = table2Data.Detail;
                        foreach (var detail in table2Data.Detail)
                        {
                            string name = detail.Name;
                            string value = detail.Value;

                            if (name == "REGNUMBER")
                            {
                                string vrn = value;
                                ClsCommonVaraibles.API_REGNUMBER = vrn;
                            }
                            if (name == "TAGID")
                            {
                                string TAGID = value.ToString();
                                ClsCommonVaraibles.TAG_ID_FOR_CASH = TAGID;
                            }
                            if (name == "EXCCODE")
                            {
                                if (value == "00" || value == "02" || value == "04")
                                    tagisvalid = "Valid";
                                break;
                            }
                        }
                        if (tagisvalid == "Valid")
                        {
                            foreach (var tabledata in tempData)
                            {
                                string name = tabledata.Name;
                                string value = tabledata.Value;
                                if (name == "REGNUMBER")
                                {
                                    string REGNUMBER = value.ToString();
                                    activeMapperData.REGNUMBER = REGNUMBER;
                                }
                                if (name == "EXCCODE")
                                {
                                    string EXCCODE = value.ToString();
                                    activeMapperData.EXCCODE = EXCCODE;
                                }
                                if (name == "TID")
                                {
                                    string TID = value.ToString();
                                    activeMapperData.TID = TID;
                                }
                                if (name == "TAGID")
                                {
                                    string TAGID = value.ToString();
                                    activeMapperData.TAGID = TAGID;
                                }
                                if (name == "VEHICLECLASS")
                                {
                                    string VEHICLECLASS = value.ToString();
                                    activeMapperData.VEHICLECLASS = VEHICLECLASS;
                                }
                                if (name == "TAGSTATUS")
                                {
                                    string TAGSTATUS = value.ToString();
                                    activeMapperData.TAGSTATUS = TAGSTATUS;

                                }
                                if (name == "ISSUEDATE")
                                {
                                    string ISSUEDATE = value.ToString();
                                    activeMapperData.ISSUEDATE = ISSUEDATE;

                                }
                                if (name == "EXCCODE")
                                {
                                    string EXCCODE = value.ToString();
                                    activeMapperData.EXCCODE = EXCCODE;

                                }
                                if (name == "BANKID")
                                {
                                    string BANKID = value.ToString();
                                    activeMapperData.BANKID = BANKID;

                                }
                                if (name == "COMVEHICLE")
                                {
                                    string COMVEHICLE = value.ToString();
                                    activeMapperData.COMVEHICLE = COMVEHICLE;

                                }
                            }
                            ClsCommonVaraibles.IS_ACTIVE_MAPPER_REQUEST_INITIATED = false;
                            return activeMapperData;

                        }

                        if(ClsCommonVaraibles.CHECK_BLT_FROM_BANK && tagisvalid != "Valid")
                        {
                            foreach (var detail in table2Data.Detail)
                            {
                                string name = detail.Name;
                                string value = detail.Value;

                                if (name == "REGNUMBER")
                                {
                                    string vrn = value;
                                    ClsCommonVaraibles.API_REGNUMBER = vrn;
                                }
                                if (name == "TAGID")
                                {
                                    string TAGID = value.ToString();
                                    ClsCommonVaraibles.TAG_ID_FOR_CASH = TAGID;
                                }
                                if (name == "EXCCODE")
                                {
                                    if (value != "00" || value != "02" || value != "04")
                                        tagisvalid = "InValid";
                                    break;
                                }
                            }
                            if (tagisvalid == "InValid")
                            {
                                foreach (var tabledata in tempData)
                                {
                                    string name = tabledata.Name;
                                    string value = tabledata.Value;
                                    if (name == "REGNUMBER")
                                    {
                                        string REGNUMBER = value.ToString();
                                        activeMapperData.REGNUMBER = REGNUMBER;
                                    }
                                    if (name == "EXCCODE")
                                    {
                                        string EXCCODE = value.ToString();
                                        activeMapperData.EXCCODE = EXCCODE;
                                    }
                                    if (name == "TID")
                                    {
                                        string TID = value.ToString();
                                        activeMapperData.TID = TID;
                                    }
                                    if (name == "TAGID")
                                    {
                                        string TAGID = value.ToString();
                                        activeMapperData.TAGID = TAGID;
                                    }
                                    if (name == "VEHICLECLASS")
                                    {
                                        string VEHICLECLASS = value.ToString();
                                        activeMapperData.VEHICLECLASS = VEHICLECLASS;
                                    }
                                    if (name == "TAGSTATUS")
                                    {
                                        string TAGSTATUS = value.ToString();
                                        activeMapperData.TAGSTATUS = TAGSTATUS;

                                    }
                                    if (name == "ISSUEDATE")
                                    {
                                        string ISSUEDATE = value.ToString();
                                        activeMapperData.ISSUEDATE = ISSUEDATE;

                                    }
                                    if (name == "EXCCODE")
                                    {
                                        string EXCCODE = value.ToString();
                                        activeMapperData.EXCCODE = EXCCODE;

                                    }
                                    if (name == "BANKID")
                                    {
                                        string BANKID = value.ToString();
                                        activeMapperData.BANKID = BANKID;

                                    }
                                    if (name == "COMVEHICLE")
                                    {
                                        string COMVEHICLE = value.ToString();
                                        activeMapperData.COMVEHICLE = COMVEHICLE;

                                    }
                                }
                                ClsCommonVaraibles.IS_ACTIVE_MAPPER_REQUEST_INITIATED = false;
                                return activeMapperData;

                            }
                        }

                    }
                    ClsMaintainLog.WriteLogAPI("ActiveMapperData", "Response status:" + response.IsSuccessStatusCode, "responseBody:" + responseBody);
                    ClsCommonVaraibles.IS_ACTIVE_MAPPER_REQUEST_INITIATED = false;
                    return activeMapperData;


                }
                else
                {
                    ClsMaintainLog.WriteLogAPI(System.Reflection.MethodBase.GetCurrentMethod().Name.ToString(), "Response status:" + response.IsSuccessStatusCode, "REQUEST FAILED");
                    ClsCommonVaraibles.IS_ACTIVE_MAPPER_REQUEST_INITIATED = false;
                    return activeMapperData;
                }
            }
            catch (Exception ex)
            {
                ClsMaintainLog.WriteLogAPI(System.Reflection.MethodBase.GetCurrentMethod().Name.ToString(), "IN EXCEPTION", "EXCEPTION:" + ex.ToString());
                ClsCommonVaraibles.IS_ACTIVE_MAPPER_REQUEST_INITIATED = false;
                return activeMapperData;
                // Handle any exceptions that occurred during the API call
            }
        }